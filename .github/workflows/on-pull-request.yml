name: Check PR

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  NF4_BLOCK_SIZE: 64  
  NF4_LARGE_BLOCK_TEST: "true"
  
jobs:
  build:
    name: Check + Lint
    runs-on: self-hosted
    environment: DEV
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run cargo fmt
        run: cargo +nightly fmt
      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: Generate keys
        run: |
          cargo build
          cargo run --release --bin key_generation
      - name: Run test
        run: cargo +stable test
  resync:
    name: Synchronisation Test with Mock Prover
    needs: [build]
    runs-on: self-hosted
    env:
      NF4_MOCK_PROVER: "true"
      NF4_CONTRACTS__DEPLOY_CONTRACTS: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clear previous run
        run: docker compose --profile sync_test down -v
      - name: Build
        run: cargo build
      - name: Generate keys
        run: cargo run --release --bin key_generation
      - name: Build Docker Image
        run: docker compose --profile sync_test build
      - name: Run Integration Test
        run: docker compose --profile development run test
      - name: Print logs
        run: docker compose --profile development logs
      - name: Remove databases
        run: docker compose --profile development rm -fvs client client2 proposer db_client db_client2 db_proposer
      - name: Shut Down Containers
        run: |
          docker compose --profile sync_test down -v

  rollup-prover:
    name: Rollup prover integration Test
    timeout-minutes: 480
    needs: [build, forge, resync] # This test is long so start it after we're sure the others have passed
    runs-on: self-hosted
    env:
      NF4_MOCK_PROVER: "false"
      NF4_CONTRACTS__DEPLOY_CONTRACTS: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: link pptau cache
        # This is a workaround to avoid downloading the ppot_26.ptau file every time. It creates a symlink to a cached file (which will be downloaded if it doesn't exist on the testrunner).
        run: |
          if [ -e /home/testrunner/ptau-cache/ppot_26.ptau ]
          then
            echo "Using cached ppot_26.ptau"
          else
            echo "Downloading ppot file to cache"
            mkdir -p /home/testrunner/ptau-cache
            wget https://pse-trusted-setup-ppot.s3.eu-central-1.amazonaws.com/pot28_0080/ppot_0080_26.ptau
            mv ppot_0080_26.ptau /home/testrunner/ptau-cache/ppot_26.ptau
            chmod 444 ptau-cache/ppot_26.ptau # Make it read-only
            echo "Cached ppot_26.ptau created"
          fi
          ln -sf /home/testrunner/ptau-cache/ppot_26.ptau /home/testrunner/actions-runner/_work/nightfall_4_PV/nightfall_4_PV/configuration/bin/ppot_26.ptau
      - name: Clear previous run
        run: docker compose --profile sync_test down -v
      - name: Build
        run: cargo build
      - name: Generate keys
        run: cargo run --release --bin key_generation
      - name: Build Docker Image
        run: docker compose --profile sync_test build
      - name: Run Integration Test
        run: docker compose --profile sync_test run test
      - name: Print logs
        run: docker compose --profile development logs
      - name: Shut Down Containers
        run: |
          docker compose --profile sync_test down -v

  forge:
    name: Smart Contract Unit Tests
    needs: [build]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Forge Tests
        run: forge test
